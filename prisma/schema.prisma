generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

enum UserRole {
  ADMIN
  TEACHER
}

model User {
  id       String   @id @default(cuid())
  email    String   @unique
  password String
  role     UserRole
  Teacher  Teacher?
}

enum AttendanceStatus {
  ABSENT
  PRESENT
  LATE
}

model Attendance {
  attendance_id     String           @id @default(cuid())
  student_id        Int
  lesson_id         Int
  attendance_status AttendanceStatus
  comment           String?
  student           Student          @relation(fields: [student_id], references: [student_id], onDelete: NoAction, onUpdate: NoAction)
  lesson            Lesson           @relation(fields: [lesson_id], references: [lesson_id], onDelete: NoAction, onUpdate: NoAction)
}

model Faculty {
  faculty_id   String    @id @default(cuid())
  faculty_name String    @db.VarChar(255)
  group        Group[]
  subject      Subject[]
  teacher      Teacher[]
}

model Group {
  group_id   Int       @id
  faculty_id String
  students   Student[]
  faculty    Faculty   @relation(fields: [faculty_id], references: [faculty_id], onDelete: NoAction, onUpdate: NoAction)
}

model Lesson {
  lesson_id    Int          @id
  subject_id   Int
  date         DateTime     @db.Date
  start_time   DateTime     @db.Time(6)
  end_time     DateTime     @db.Time(6)
  group_number Int
  teacher_id   String
  attendance   Attendance[]
  Subject      Subject      @relation(fields: [subject_id], references: [subject_id], onDelete: NoAction, onUpdate: NoAction)
  Teacher      Teacher      @relation(fields: [teacher_id], references: [teacher_id], onDelete: NoAction, onUpdate: NoAction)
}

model Student {
  student_id   Int          @id
  student_name String       @db.VarChar(255)
  group_id     Int
  Attendance   Attendance[]
  Group        Group        @relation(fields: [group_id], references: [group_id])
}

model Subject {
  subject_id   Int      @id
  subject_name String?  @db.VarChar(255)
  faculty_id   String
  teacher_id   String
  lesson       Lesson[]
  faculty      Faculty  @relation(fields: [faculty_id], references: [faculty_id], onDelete: NoAction, onUpdate: NoAction)
  teacher      Teacher? @relation(fields: [teacher_id], references: [teacher_id])
}

model Teacher {
  teacher_id   String    @id @default(cuid())
  email        String    @unique
  teacher_name String    @db.VarChar(255)
  faculty_id   String
  lessons      Lesson[]
  subjects     Subject[]
  faculty      Faculty?  @relation(fields: [faculty_id], references: [faculty_id], onDelete: NoAction, onUpdate: NoAction)
  user         User?     @relation(fields: [email], references: [email], onDelete: NoAction, onUpdate: NoAction)
}
